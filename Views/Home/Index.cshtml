@model FanucRelease.Models.ViewModels.DashboardViewModel
@{
    Layout = "_Layout";
    var items = Model.GecmisProgramlar ?? Array.Empty<FanucRelease.Models.ViewModels.GecmisProgramRow>();
    var program = Model.SonProgram;
    int toplamKaynak = Model.ToplamKaynak;
    int basariliKaynak = Model.BasariliKaynak;
    int basariOrani = toplamKaynak > 0 ? (int)System.Math.Round(basariliKaynak * 100.0 / toplamKaynak) : 0;
    // Son program için başarı/başarısızlık: controller tarafından hazırlanmış değerler öncelikli
    var kaynakListLocal = (program?.Kaynaklar ?? Enumerable.Empty<FanucRelease.Models.Kaynak>()).ToList();
    int programToplam = Model.SonProgramToplam;
    int programBasarili = Model.SonProgramBasarili;
    int programBasarisiz = Model.SonProgramBasarisiz;
    int programBasariYuzde = Model.SonProgramBasariYuzde;
    // En son programın son başarılı kaynağı (controller ViewBag'den)
    var sonBasarili = Model.SonBasariliKaynak;
    // Süre metni: controller'dan geliyorsa onu kullan, yoksa fallback hesapla
    string sonSureText = Model.SonBasariliKaynakToplamSureText ?? "—";
}

@section Head {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
}
 

<div class="dashboard-container">
    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
    </div>

    <div class="container-fluid">
        <!-- Dashboard Header -->
        <div class="dashboard-header">
          <h1 class="dashboard-title" style="display:flex; align-items:center; gap:.5rem;">
              <img src="~/icons/robot.png" alt="Robot" style="width:45px; height:45px; object-fit:contain; filter: drop-shadow(0 1px 1px rgba(0,0,0,.2));" />
              <span class="brand-gold">RoboEye</span>
          </h1>
            <p class="dashboard-subtitle" style="align-items:center; display:flex; gap:.5rem;">Gerçek zamanlı robot takip ve yönetim sistemi</p>
        </div>

        <!-- Stats Grid -->
        <div class="stats-grid">
            <div class="stat-card success">
                <div class="stat-header">
                    <div>
                        <h3 class="stat-value" id="programCount">@Model.ProgramCount</h3>
                        <p class="stat-label">Toplam Program</p>
                        <div class="stat-trend @Model.ProgramCountTrendClass">
                            <i class="@Model.ProgramCountTrendIcon"></i>
                            <span>@Model.ProgramCountTrendText</span>
                        </div>
                    </div>
                    <div class="stat-icon success">
                        <i class="fas fa-code"></i>
                    </div>
                </div>
            </div>

            <div class="stat-card warning">
                <div class="stat-header">
                    <div>
                        <h3 class="stat-value" id="kaynakCount">@toplamKaynak</h3>
                        <p class="stat-label">Toplam Kaynak</p>

                         <div class="stat-trend trend-up">
                            <i class="fas fa-arrow-up"></i>
                            <span>@basariOrani% başarılı</span>
                        </div>
                    </div>
                    <div class="stat-icon warning">
                        <i class="fas fa-bolt"></i>
                    </div>
                </div>
            </div>

            <div class="stat-card danger">
                <div class="stat-header">
                    <div>
                        <h3 class="stat-value" id="hataCount">@Model.HataToplam</h3>
                        <p class="stat-label">Toplam Hata</p>
                        <div class="stat-trend @Model.HataTrendClass">
                            <i class="@Model.HataTrendIcon"></i>
                            <span>@Model.HataTrendText</span>
                        </div>
                    </div>
                    <div class="stat-icon danger">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                </div>
            </div>

            <div class="stat-card info">
                <div class="stat-header">
                    <div>
                        <h3 class="stat-value" id="totalTime">@Model.BugunToplamKaynakSureText</h3>
                        <p class="stat-label">Günlük Kaynak Süresi</p>
                        <div class="stat-trend @Model.TodayTimeTrendClass">
                            <i class="@Model.TodayTimeTrendIcon"></i>
                            <span>@Model.TodayTimeTrendText</span>
                        </div>
                    </div>
                    <div class="stat-icon info">
                        <i class="fas fa-clock"></i>
                    </div>
                </div>
            </div>

            <div class="stat-card primary">
                <div class="stat-header">
                    <div>
                        <h3 class="stat-value" id="trafoCount">5</h3>
                        <p class="stat-label">Aktif Trafo</p>
                        <div class="stat-trend trend-up">
                            <i class="fas fa-arrow-up"></i>
                            <span>Tümü çalışıyor</span>
                        </div>
                    </div>
                    <div class="stat-icon primary">
                        <i class="fas fa-plug"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Robot Status -->
        <div class="robot-status stopped" id="robotStatusCard">
            <div class="robot-info">
                <div class="robot-avatar" id="robotAvatar">
                    <img src="/icons/robot.png" alt="Robot" style="width:60px; height:60px; object-fit:contain;" />
                </div>
                <div class="robot-details">
                    <h3>
                        <span class="status-indicator" id="robotStatusIndicator"></span>
                        <span id="robotStatusText">Robot Durdu</span>
                    </h3>
                    <p class="robot-program">
                        <i class="fas fa-stop-circle" id="robotStatusIcon"></i>
                        Aktif Program: <strong id="activeProgramText">Bekleniyor...</strong>
                    </p>
                    <div class="robot-actions">
                        <a id="btnLiveWatch" asp-controller="CanliIzleme" asp-action="Index" class="btn-modern success" data-base-href="@Url.Action("Index","CanliIzleme")">
                            <i class="fas fa-eye"></i>
                            Canlı İzle
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Son Çalıştırılan Program Kartı (Dinamik) -->
    <div class="program-card mb-2rem">
            @{
                // Controller'da hazırlanmış baş/bitiş metinlerini kullan
                var kaynaklar = program?.Kaynaklar?.OrderBy(k => k.BaslangicSaati).ToList()
                               ?? new List<FanucRelease.Models.Kaynak>();
                string basText = Model.SonProgramBaslangicText ?? "—";
                string bitText = Model.SonProgramBitisText ?? "—";
            }
            <div class="program-header">
                <h4 class="program-title">
                    <i class="fa-solid fa-file"></i>
                    En son Program: @(program?.ProgramAdi ?? "—")
                </h4>
                <div class="program-info-grid">
                    <div class="info-item">
                        <div class="info-icon success">
                            <i class="fas fa-play"></i>
                        </div>
                        <div class="info-content">
                            <span class="info-label">Başlangıç</span>
                            <span class="info-value">@basText</span>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon danger">
                            <i class="fas fa-stop"></i>
                        </div>
                        <div class="info-content">
                            <span class="info-label">Bitiş</span>
                            <span class="info-value">@bitText</span>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon info">
                            <i class="fas fa-user"></i>
                        </div>
                        <div class="info-content">
                            <span class="info-label">Operatör</span>
                            <span class="info-value">@(program?.Operator is null ? "—" : ($"{program.Operator.Ad} {program.Operator.Soyad}"))</span>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon warning">
                            <i class="fas fa-bolt"></i>
                        </div>
                        <div class="info-content">
                            <span class="info-label">Başarılı Kaynak</span>
                            <span class="info-value">@programBasarili</span>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon primary">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                        <div class="info-content">
                            <span class="info-label">Başarısız Kaynak</span>
                            <span class="info-value">@programBasarisiz</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="kaynak-list">
                <h5 class="kaynak-list-title">
                    <i class="fas fa-list"></i>
                    Kaynak Detayları
                </h5>
                <div class="kaynak-grid">
                    @for (int i = 0; i < kaynaklar.Count; i++)
                    {
                        var k = kaynaklar[i];
                        var ad = $"Kaynak-{(i+1).ToString("D2")}";
                        var bas = k.BaslangicSaati == default ? "—" : k.BaslangicSaati.ToString("HH:mm");
                        var bit = k.BitisSaati == default ? "—" : k.BitisSaati.ToString("HH:mm");
                        var ts = k.ToplamSure != default ? k.ToplamSure.ToTimeSpan() : (k.BitisSaati - k.BaslangicSaati);
                        if (ts < TimeSpan.Zero) { ts = TimeSpan.Zero; }
                        var totalMinutes = (int)Math.Round(ts.TotalMinutes);
                        var sureText = ts.TotalHours >= 1 ? $"{(int)ts.TotalHours} sa {ts.Minutes} dk" : $"{totalMinutes} dk";
                        var statusClass = k.basarili_mi ? "success" : "danger";
                        // 'fa-times' geniş destekli (FA5/FA6 alias), görünmemeyi önler
                        var statusIcon = k.basarili_mi ? "fas fa-check" : "fas fa-times";
                    <div class="kaynak-item">
                        <div class="kaynak-icon">
                            <i class="fas fa-bolt"></i>
                        </div>
                        <div class="kaynak-details">
                            <h6>@ad</h6>
                            <div class="kaynak-time">
                                <span><i class="fas fa-play-circle"></i> @bas</span>
                                <span><i class="fas fa-stop-circle"></i> @bit</span>
                                <span class="duration"><i class="fas fa-clock"></i> @sureText</span>
                            </div>
                        </div>
                        <div class="kaynak-status @statusClass">
                            <i class="@statusIcon"></i>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>

        <!-- Charts Section -->
        <div class="charts-grid">
            <div class="chart-card success-rate-card">
                <div class="chart-header">
                    <h5 class="chart-title">
                        <i class="fas fa-chart-pie"></i> Son Program Başarı Oranı
                    </h5>
                </div>
                <div class="success-rate-display">
                    <div class="success-meta">
                        <div class="success-program-name">@(string.IsNullOrWhiteSpace(program?.ProgramAdi) ? "—" : program!.ProgramAdi)</div>
                        <div class="success-circle" style="background: conic-gradient(from 0deg, #11998e 0% @programBasariYuzde% , #f1f3f4 @programBasariYuzde% 100%);">
                            <div class="success-percentage">@programBasariYuzde%</div>
                        </div>
                    </div>
                    <div class="success-stats">
                        <div class="stat-item success-stat">
                            <i class="fas fa-check-circle"></i>
                            <div>
                                <span class="stat-number">@programBasarili</span>
                                <span class="stat-text">Başarılı</span>
                            </div>
                        </div>
                        <div class="stat-item error-stat">
                            <i class="fas fa-times-circle"></i>
                            <div>
                                <span class="stat-number">@programBasarisiz</span>
                                <span class="stat-text">Hatalı</span>
                            </div>
                        </div>
                        <div class="stat-item total-stat">
                            <i class="fas fa-bolt"></i>
                            <div>
                                <span class="stat-number">@programToplam</span>
                                <span class="stat-text">Toplam</span>
                            </div>
                        </div>
                    </div>
                    <!-- todayPie canvas eklendi: Chart.js context hatasını önlemek için varlık kontrolü yapılacak -->
                    <div style="width:120px; height:120px; display:flex; align-items:center; justify-content:center;">
                        <canvas id="todayPie" width="100" height="100" aria-label="Başarı Oranı Grafiği"></canvas>
                    </div>
                </div>
            </div>

            <div class="chart-card">
                <div class="chart-header">
                    <h5 class="chart-title">
                        <i class="fas fa-chart-bar"></i> Son Kaynak Verileri
                    </h5>
                </div>
                <div class="chart-container" style="padding:1rem;">
                    @if (sonBasarili == null)
                    {
                        <div style="color:#6c757d; font-weight:600;">Veri bulunamadı.</div>
                    }
                    else
                    {
                        <div style="display:grid; grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); gap: .75rem;">
                            <div class="info-item">
                                <div class="info-icon info"><i class="fas fa-code"></i></div>
                                <div class="info-content">
                                    <span class="info-label">Başlangıç Satırı</span>
                                    <span class="info-value">@sonBasarili.BaslangicSatiri</span>
                                </div>
                            </div>
                            <div class="info-item">
                                <div class="info-icon primary"><i class="fas fa-code-branch"></i></div>
                                <div class="info-content">
                                    <span class="info-label">Bitiş Satırı</span>
                                    <span class="info-value">@sonBasarili.BitisSatiri</span>
                                </div>
                            </div>
                            <div class="info-item">
                                <div class="info-icon success"><i class="fas fa-hashtag"></i></div>
                                <div class="info-content">
                                    <span class="info-label">PRC No</span>
                                    <span class="info-value">@sonBasarili.PrcNo</span>
                                </div>
                            </div>
                            <div class="info-item">
                                <div class="info-icon warning"><i class="fas fa-hashtag"></i></div>
                                <div class="info-content">
                                    <span class="info-label">SRC No</span>
                                    <span class="info-value">@sonBasarili.SrcNo</span>
                                </div>
                            </div>
                            <div class="info-item">
                                <div class="info-icon info"><i class="fas fa-ruler"></i></div>
                                <div class="info-content">
                                    <span class="info-label">Kaynak Uzunluğu</span>
                                    <span class="info-value">@sonBasarili.KaynakUzunlugu mm</span>
                                </div>
                            </div>
                            <div class="info-item">
                                <div class="info-icon danger"><i class="fas fa-clock"></i></div>
                                <div class="info-content">
                                    <span class="info-label">Toplam Süre</span>
                                    <span class="info-value">@sonSureText</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="chart-card alarm-card">
                <div class="chart-header">
                    <h5 class="chart-title">
                        <i class="fas fa-exclamation-triangle"></i>Son Program Alarm Kayıtları
                    </h5>

                </div>
                <div class="alarm-container">
                    <div class="alarm-list">
                        @if (program?.Hatalar == null || !program.Hatalar.Any())
                        {
                            <div class="text-muted" style="padding:.5rem 1rem;">Kayıt bulunamadı.</div>
                        }
                        else
                        {
                            foreach (var hata in program.Hatalar.OrderByDescending(h => h.Zaman))
                            {
                                var severityClass = hata.Tip == 1 ? "high" : (hata.Tip == 2 ? "medium" : "low");
                                var kod = string.IsNullOrWhiteSpace(hata.Kod) ? "—" : hata.Kod;
                                var desc = string.IsNullOrWhiteSpace(hata.Aciklama) ? "—" : hata.Aciklama;
                                var zamanText = hata.Zaman.ToString("dd.MM.yyyy HH:mm:ss");
                        <div class="alarm-item @severityClass">
                            <div class="alarm-icon">
                                <i class="fas fa-exclamation-triangle"></i>
                            </div>
                            <div class="alarm-details">
                                <div class="alarm-code">KOD-@kod</div>
                                <div class="alarm-desc">@desc</div>
                                <div class="alarm-time">@zamanText</div>
                            </div>
                            <div class="alarm-status resolved">
                                <i class="fas fa-check"></i>
                            </div>
                        </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>

       <!-- Geçmiş Programlar Tablosu -->
<div class="history-section">
    <div class="section-header">
        <h4 class="section-title">
            <i class="fas fa-history"></i>
            Geçmiş Programlar
        </h4>
        <p class="section-subtitle">Son çalıştırılan programların geçmiş kayıtları</p>
    </div>

    <div class="history-table-container">
        <div class="table-responsive">
            <table class="table history-table">
                <thead>
                    <tr>
                        <th><i class="fas fa-code"></i> Program Adı</th>
                        <th><i class="fas fa-bolt"></i> Toplam Kaynak Sayısı</th>
                        <th><i class="fas fa-user"></i> Operatör</th>
                        <th><i class="fas fa-clock"></i> Toplam Süre</th>
                        <th><i class="fas fa-calendar"></i> Tarih</th>
                        <th><i class="fas fa-chart-line"></i> Başarı</th>
                        <th><i class="fas fa-eye"></i> Detaylar</th>
                    </tr>
                </thead>
                <tbody>
                @if (!items.Any())
                {
                    <tr>
                        <td colspan="7" class="text-muted">Kayıt bulunamadı.</td>
                    </tr>
                }
                else
                {
                    foreach (var item in items)
                    {
                        var rateClass = item.BasariYuzde >= 80 ? "high" : (item.BasariYuzde >= 50 ? "medium" : "low");
                        <tr>
                            <td>
                                <div class="program-name">
                                    <span class="program-code">@item.ProgramAdi</span>
                                    <small class="program-version">#@item.Id</small>
                                </div>
                            </td>

                            <td>
                                <span class="badge badge-count">@item.KaynakSayisi</span>
                            </td>

                            <td>
                                <div class="operator-info">
                                    <i class="fas fa-user-circle"></i>
                                    <span>@item.OperatorAdSoyad</span>
                                </div>
                            </td>

                            <td><span class="duration">@item.ToplamSureText</span></td>
                            <td><span class="date">@item.TarihText</span></td>

                            <td><span class="success-rate @rateClass">@item.BasariYuzde%</span></td>

                            <td>
                                <a class="btn-detail"
                                   asp-controller="ProgramDetay"
                                   asp-action="Index"
                                   asp-route-id="@item.Id"
                                   title="Detayları Gör">
                                    <i class="fas fa-eye"></i>
                                </a>
                            </td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
    </div>
</div>

<script>
    // Chart.js configurations with modern styling
    const chartDefaults = {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                labels: {
                    font: { family: 'Poppins', size: 12, weight: '500' },
                    color: '#2c3e50'
                }
            }
        },
        scales: {
            x: {
                grid: { color: 'rgba(0,0,0,0.05)' },
                ticks: { font: { family: 'Poppins', size: 11 }, color: '#6c757d' }
            },
            y: {
                grid: { color: 'rgba(0,0,0,0.05)' },
                ticks: { font: { family: 'Poppins', size: 11 }, color: '#6c757d' }
            }
        }
    };

    // DOM ready: init chart and handle loading animation
    document.addEventListener('DOMContentLoaded', function () {
        // Today Success Rate Pie Chart
        const todayPieCanvas = document.getElementById('todayPie');
        if (todayPieCanvas) {
            new Chart(todayPieCanvas, {
                type: 'doughnut',
                data: {
                    labels: ['Başarılı', 'Hatalı'],
                    datasets: [{
                        data: [@programBasarili, @programBasarisiz],
                        backgroundColor: ['#11998e', '#ff416c'],
                        borderWidth: 0,
                        cutout: '70%'
                    }]
                },
                options: {
                    ...chartDefaults,
                    plugins: { ...chartDefaults.plugins, legend: { position: 'bottom' } }
                }
            });
        }

        // Page loading animation
        const loadingOverlay = document.getElementById('loadingOverlay');
        loadingOverlay.classList.add('show');
        setTimeout(() => {
            loadingOverlay.classList.remove('show');
            const cards = document.querySelectorAll('.stat-card, .chart-card, .robot-status');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)';
                setTimeout(() => {
                    card.style.transition = 'all 0.6s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
        }, 1500);
        // Otomatik artış kapatıldı: gerçek zamanlı güncelleme istenirse SignalR/gerçek veri ile bağlanılacak
    });

    // Add click effects to cards
    document.querySelectorAll('.stat-card').forEach(card => {
        card.addEventListener('click', function (e) {
            // Create ripple effect
            const ripple = document.createElement('span');
            const rect = this.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;

            ripple.style.cssText = `
            position: absolute;
            width: ${size}px;
            height: ${size}px;
            left: ${x}px;
            top: ${y}px;
            background: rgba(255,255,255,0.5);
            border-radius: 50%;
            pointer-events: none;
            transform: scale(0);
            animation: ripple 0.6s ease-out;
        `;

            this.style.position = 'relative';
            this.style.overflow = 'hidden';
            this.appendChild(ripple);

            setTimeout(() => ripple.remove(), 600);
        });
    });

    // Add CSS for ripple animation
    const style = document.createElement('style');
    style.textContent = `
    @@keyframes ripple {
        to {
            transform: scale(2);
            opacity: 0;
        }
    }
`;
    document.head.appendChild(style);

    // Removed unused viewProgramDetails helper
</script>

<!-- SignalR JavaScript Library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>

<script>
    // Update robot status UI
    function updateRobotStatus(status, activeProgram) {
        const robotStatusCard = document.getElementById('robotStatusCard');
        const robotStatusText = document.getElementById('robotStatusText');
        const activeProgramText = document.getElementById('activeProgramText');
        const robotStatusIcon = document.getElementById('robotStatusIcon');
        if (status === "Calisiyor") {
            robotStatusCard.classList.remove('stopped');
            robotStatusText.textContent = 'Robot Çalışıyor';
            robotStatusIcon.className = 'fas fa-play-circle';
        } else {
            robotStatusCard.classList.add('stopped');
            robotStatusText.textContent = 'Robot Durdu';
            robotStatusIcon.className = 'fas fa-stop-circle';
        }
        if (activeProgram) {
            activeProgramText.textContent = activeProgram;
        }
        // Update Canlı İzle button target
        const liveBtn = document.getElementById('btnLiveWatch');
        if (liveBtn) {
            const baseHref = liveBtn.getAttribute('data-base-href') || '/CanliIzleme';
            if (status === 'Calisiyor') {
                const pid = @((Model.SonProgram?.Id ?? 0));
                liveBtn.setAttribute('href', pid > 0 ? `${baseHref}?programId=${pid}` : baseHref);
            } else {
                liveBtn.setAttribute('href', baseHref);
            }
        }
    // Debug log kaldırıldı
    }

    // SignalR Connection for Real-time Robot Status
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/robotStatusHub")
        .build();

    // Robot status update handler
    connection.on("ReceiveRobotStatus", function (status, activeProgram) {
        updateRobotStatus(status, activeProgram);
    });

    // Start SignalR connection
    connection.start().then(function () {
        // Bağlantı kuruldu (debug log kaldırıldı)
    }).catch(function (err) {
        console.error("SignalR connection error:", err.toString());
    });
</script>