@{
    Layout = "_Layout";
    var items = ViewBag.GecmisProgramlar as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>();
    var program = Model as FanucRelease.Models.ProgramVerisi;
    int toplamKaynak = ViewBag.KaynakToplam ?? 0;
    int basariliKaynak = ViewBag.KaynakBasarili ?? 0;
    int basariOrani = toplamKaynak > 0 ? (int)System.Math.Round(basariliKaynak * 100.0 / toplamKaynak) : 0;
    // Son program için başarı/başarısızlık hesapları (yalnızca bu sayfada kullanılacak)
    var kaynakListLocal = (program?.Kaynaklar ?? Enumerable.Empty<FanucRelease.Models.Kaynak>()).ToList();
    int programToplam = kaynakListLocal.Count;
    int programBasarili = kaynakListLocal.Count(k => k.basarili_mi);
    int programBasarisiz = Math.Max(0, programToplam - programBasarili);
    int programBasariYuzde = programToplam > 0 ? (int)System.Math.Round(programBasarili * 100.0 / programToplam) : 0;
}

@section Head {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script
        src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
}

<style>
    :root {
        --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --gradient-success: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        --gradient-danger: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
        --gradient-warning: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        --gradient-info: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        --glass-bg: rgba(255, 255, 255, 0.95);
        --glass-border: rgba(255, 255, 255, 0.3);
        --shadow-glass: 0 8px 32px rgba(31, 38, 135, 0.2);
        --border-radius: 20px;
        --transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
    }

    .dashboard-container {
        min-height: 100vh;
        padding: 2rem 0;
    }

    /* Header Section */
    .dashboard-header {
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        border-radius: var(--border-radius);
        border: 1px solid var(--glass-border);
        box-shadow: var(--shadow-glass);
        padding: 2rem;
        margin-bottom: 2rem;
        text-align: center;
        position: relative;
        overflow: hidden;
    }

    .dashboard-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--gradient-primary);
        border-radius: var(--border-radius) var(--border-radius) 0 0;
    }

    .dashboard-title {
        font-size: 2.5rem;
        font-weight: 700;
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 0.5rem;
    }

    .dashboard-subtitle {
        color: #6c757d;
        font-size: 1.1rem;
        margin-bottom: 0;
    }

    /* Stats Cards */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        border-radius: var(--border-radius);
        border: 1px solid var(--glass-border);
        box-shadow: var(--shadow-glass);
        padding: 1.5rem;
        position: relative;
        overflow: hidden;
        transition: var(--transition);
    }

    .stat-card:hover {
        transform: translateY(-5px) scale(1.02);
        box-shadow: 0 20px 40px rgba(31, 38, 135, 0.3);
    }

    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        border-radius: var(--border-radius) var(--border-radius) 0 0;
    }

    .stat-card.primary::before {
        background: var(--gradient-primary);
    }

    .stat-card.success::before {
        background: var(--gradient-success);
    }

    .stat-card.danger::before {
        background: var(--gradient-danger);
    }

    .stat-card.warning::before {
        background: var(--gradient-warning);
    }

    .stat-card.info::before {
        background: var(--gradient-info);
    }

    .stat-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1rem;
    }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.8rem;
        color: white;
    }

    .stat-icon.primary {
        background: var(--gradient-primary);
    }

    .stat-icon.success {
        background: var(--gradient-success);
    }

    .stat-icon.danger {
        background: var(--gradient-danger);
    }

    .stat-icon.warning {
        background: var(--gradient-warning);
    }

    .stat-icon.info {
        background: var(--gradient-info);
    }

    .stat-value {
        font-size: 2.2rem;
        font-weight: 700;
        color: #2c3e50;
        margin: 0;
    }

    .stat-label {
        font-size: 0.95rem;
        color: #6c757d;
        margin: 0;
        font-weight: 500;
    }

    .stat-trend {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 0.5rem;
        font-size: 0.85rem;
    }

    .trend-up {
        color: #28a745;
    }

    .trend-down {
        color: #dc3545;
    }

    /* Robot Status Card */
    .robot-status {
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        border-radius: var(--border-radius);
        border: 1px solid var(--glass-border);
        box-shadow: var(--shadow-glass);
        padding: 2rem;
        margin-bottom: 2rem;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .robot-status::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--gradient-success);
        border-radius: var(--border-radius) var(--border-radius) 0 0;
        transition: all 0.3s ease;
    }

    /* Robot Durdu Durumu */
    .robot-status.stopped::before {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
    }

    .robot-info {
        display: flex;
        align-items: center;
        gap: 2rem;
    }

    .robot-avatar {
        width: 100px;
        height: 100px;
        background: var(--gradient-success);
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem;
        color: white;
        animation: pulse 2s infinite;
        transition: all 0.3s ease;
    }

    /* Robot Durdu - Avatar */
    .robot-status.stopped .robot-avatar {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        animation: none;
        /* Yanıp sönmeyi durdur */
    }

    @@keyframes pulse {

        0%,
        100% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }
    }

    .robot-details h3 {
        font-size: 1.8rem;
        font-weight: 700;
        color: #28a745;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }

    /* Robot Durdu - Başlık */
    .robot-status.stopped .robot-details h3 {
        color: #dc3545;
    }

    .status-indicator {
        width: 12px;
        height: 12px;
        background: #28a745;
        border-radius: 50%;
        animation: blink 1.5s infinite;
        transition: all 0.3s ease;
    }

    /* Robot Durdu - Status Indicator */
    .robot-status.stopped .status-indicator {
        background: #dc3545;
        animation: none;
        /* Yanıp sönmeyi durdur */
    }

    @@keyframes blink {

        0%,
        50% {
            opacity: 1;
        }

        51%,
        100% {
            opacity: 0.3;
        }
    }

    .robot-program {
        color: #6c757d;
        font-size: 1.1rem;
        margin-bottom: 1rem;
    }

    .robot-actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    /* Modern Buttons */
    .btn-modern {
        padding: 12px 24px;
        border-radius: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: var(--transition);
        border: none;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .btn-modern:hover {
        transform: translateY(-2px);
        text-decoration: none;
    }

    .btn-modern.primary {
        background: var(--gradient-primary);
        color: white;
    }

    .btn-modern.success {
        background: var(--gradient-success);
        color: white;
    }

    .btn-modern.danger {
        background: var(--gradient-danger);
        color: white;
    }

    /* Robot Durdu - Buton rengi */
    .robot-status.stopped .btn-modern.success {
        background: var(--gradient-danger);
        color: white;
    }

    /* Charts Section */
    .charts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 2rem;
        margin-bottom: 2rem;
    }

    .chart-card {
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        border-radius: var(--border-radius);
        border: 1px solid var(--glass-border);
        box-shadow: var(--shadow-glass);
        padding: 1.5rem;
        position: relative;
        overflow: hidden;
    }

    .chart-header {
        display: flex;
        align-items: center;
        justify-content: between;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    }

    .chart-title {
        font-size: 1.2rem;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
    }

    .parameter-subtitle {
        font-size: 0.9rem;
        color: #6c757d;
        font-weight: 500;
        margin-top: 0.25rem;
    }

    .chart-container {
        height: 300px;
        position: relative;
    }

    /* Quick Actions */
    .quick-actions {
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        border-radius: var(--border-radius);
        border: 1px solid var(--glass-border);
        box-shadow: var(--shadow-glass);
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .quick-actions h4 {
        font-size: 1.3rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1rem;
    }

    .actions-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
    }

    .action-btn {
        background: var(--glass-bg);
        border: 1px solid var(--glass-border);
        border-radius: 12px;
        padding: 1rem;
        text-align: center;
        transition: var(--transition);
        text-decoration: none;
        color: #2c3e50;
    }

    .action-btn:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-glass);
        text-decoration: none;
        color: #2c3e50;
    }

    .action-btn i {
        font-size: 2rem;
        margin-bottom: 0.5rem;
        display: block;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .dashboard-container {
            padding: 1rem 0;
        }

        .dashboard-header {
            padding: 1.5rem;
        }

        .dashboard-title {
            font-size: 2rem;
        }

        .stats-grid {
            grid-template-columns: 1fr;
        }

        .charts-grid {
            grid-template-columns: 1fr;
        }

        .robot-info {
            flex-direction: column;
            text-align: center;
            gap: 1rem;
        }

        .robot-actions {
            justify-content: center;
        }
    }

    /* Loading Animation */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(5px);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        opacity: 0;
        visibility: hidden;
        transition: var(--transition);
    }

    .loading-overlay.show {
        opacity: 1;
        visibility: visible;
    }

    .loading-spinner {
        width: 60px;
        height: 60px;
        border: 4px solid rgba(102, 126, 234, 0.3);
        border-top: 4px solid #667eea;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* Success Rate Card Styles */
    .success-rate-display {
        padding: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 2rem;
        height: 250px;
    }

    .success-circle {
        position: relative;
        width: 120px;
        height: 120px;
        border-radius: 50%;
        background: conic-gradient(from 0deg, #11998e 0% 97%, #f1f3f4 97% 100%);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        box-shadow: 0 8px 25px rgba(17, 153, 142, 0.3);
    }

    .success-circle::before {
        content: '';
        position: absolute;
        top: 8px;
        left: 8px;
        right: 8px;
        bottom: 8px;
        background: white;
        border-radius: 50%;
        z-index: 1;
    }

    .success-percentage {
        position: relative;
        z-index: 2;
        font-size: 2rem;
        font-weight: 800;
        color: #11998e;
        line-height: 1;
    }

    .program-name {
        position: relative;
        z-index: 2;
        font-size: 0.8rem;
        font-weight: 600;
        color: #6c757d;
        margin-top: 0.25rem;
    }

    .success-stats {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        flex: 1;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        border-radius: 12px;
        background: rgba(255, 255, 255, 0.7);
        border-left: 4px solid;
    }

    .stat-item i {
        font-size: 1.5rem;
        width: 24px;
        text-align: center;
    }

    .stat-item div {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .stat-number {
        font-size: 1.4rem;
        font-weight: 700;
    }

    .stat-text {
        font-size: 0.9rem;
        font-weight: 500;
        opacity: 0.8;
    }

    .success-stat {
        border-left-color: #28a745;
    }

    .success-stat i {
        color: #28a745;
    }

    .success-stat .stat-number {
        color: #28a745;
    }

    .error-stat {
        border-left-color: #dc3545;
    }

    .error-stat i {
        color: #dc3545;
    }

    .error-stat .stat-number {
        color: #dc3545;
    }

    .total-stat {
        border-left-color: #17a2b8;
    }

    .total-stat i {
        color: #17a2b8;
    }

    .total-stat .stat-number {
        color: #17a2b8;
    }

    /* Mobile responsive */
    @@media (max-width: 768px) {
        .success-rate-display {
            flex-direction: column;
            height: auto;
            gap: 1.5rem;
        }

        .success-circle {
            width: 100px;
            height: 100px;
        }

        .success-percentage {
            font-size: 1.6rem;
        }

        .success-stats {
            width: 100%;
        }
    }

    /* Alarm Card Styles */
    .alarm-container {
        padding: 1rem;
        max-height: 280px;
        overflow-y: auto;
    }

    .alarm-list {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .alarm-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        border-radius: 12px;
        background: rgba(255, 255, 255, 0.8);
        border-left: 4px solid;
        transition: var(--transition);
    }

    .alarm-item:hover {
        background: rgba(255, 255, 255, 0.95);
        transform: translateX(3px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .alarm-item.high {
        border-left-color: #dc3545;
    }

    .alarm-item.medium {
        border-left-color: #ffc107;
    }

    .alarm-item.low {
        border-left-color: #17a2b8;
    }

    .alarm-icon {
        width: 40px;
        height: 40px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        color: white;
        flex-shrink: 0;
    }

    .alarm-item.high .alarm-icon {
        background: linear-gradient(135deg, #dc3545, #c82333);
    }

    .alarm-item.medium .alarm-icon {
        background: linear-gradient(135deg, #ffc107, #e0a800);
    }

    .alarm-item.low .alarm-icon {
        background: linear-gradient(135deg, #17a2b8, #138496);
    }

    .alarm-details {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .alarm-code {
        font-size: 0.9rem;
        font-weight: 700;
        color: #2c3e50;
    }

    .alarm-desc {
        font-size: 0.85rem;
        color: #6c757d;
        font-weight: 500;
    }

    .alarm-time {
        font-size: 0.75rem;
        color: #9ca3af;
        font-family: 'Courier New', monospace;
    }

    .alarm-status {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1rem;
        color: white;
        flex-shrink: 0;
    }

    .alarm-status.resolved {
        background: linear-gradient(135deg, #28a745, #20c997);
    }

    .alarm-status.active {
        background: linear-gradient(135deg, #dc3545, #c82333);
        animation: pulse-alarm 2s infinite;
    }

    @@keyframes pulse-alarm {

        0%,
        100% {
            box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.4);
        }

        50% {
            box-shadow: 0 0 0 8px rgba(220, 53, 69, 0);
        }
    }

    /* Custom scrollbar for alarm list */
    .alarm-container::-webkit-scrollbar {
        width: 6px;
    }

    .alarm-container::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.1);
        border-radius: 3px;
    }

    .alarm-container::-webkit-scrollbar-thumb {
        background: rgba(102, 126, 234, 0.5);
        border-radius: 3px;
    }

    .alarm-container::-webkit-scrollbar-thumb:hover {
        background: rgba(102, 126, 234, 0.8);
    }

    /* Mobile responsive for alarms */
    @@media (max-width: 768px) {
        .alarm-item {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }

        .alarm-status {
            align-self: flex-end;
        }
    }

    /* History Section Styles */
    .history-section {
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        border-radius: var(--border-radius);
        border: 1px solid var(--glass-border);
        box-shadow: var(--shadow-glass);
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .section-header {
        margin-bottom: 2rem;
        text-align: center;
    }

    .section-title {
        font-size: 1.8rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.75rem;
    }

    .section-subtitle {
        color: #6c757d;
        font-size: 1rem;
        margin: 0;
    }

    .history-table-container {
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        max-height: 500px;
        /* Sabit maksimum yükseklik */
        overflow-y: auto;
        /* Dikey kaydırma */
    }

    /* Geçmiş programlar tablosu için custom scrollbar */
    .history-table-container::-webkit-scrollbar {
        width: 8px;
    }

    .history-table-container::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.1);
        border-radius: 4px;
    }

    .history-table-container::-webkit-scrollbar-thumb {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 4px;
    }

    .history-table-container::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
    }

    .history-table {
        margin: 0;
        background: white;
        border: none;
        min-width: 800px;
        /* Minimum genişlik responsive için */
    }

    .history-table thead {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        position: sticky;
        /* Header sabit kalacak */
        top: 0;
        z-index: 10;
    }

    .history-table thead th {
        border: none;
        padding: 1rem;
        font-weight: 600;
        font-size: 0.9rem;
        text-align: center;
        vertical-align: middle;
    }

    .history-table tbody tr {
        transition: var(--transition);
        border-bottom: 1px solid rgba(0, 0, 0, 0.08);
    }

    .history-table tbody tr:hover {
        background: rgba(102, 126, 234, 0.05);
        transform: scale(1.01);
    }

    .history-table tbody td {
        padding: 1rem;
        border: none;
        text-align: center;
        vertical-align: middle;
    }

    .program-name {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.25rem;
    }

    .program-code {
        font-weight: 700;
        color: #2c3e50;
        font-size: 0.95rem;
    }

    .program-version {
        font-size: 0.75rem;
        color: #6c757d;
        background: rgba(102, 126, 234, 0.1);
        padding: 0.125rem 0.5rem;
        border-radius: 12px;
    }

    .badge {
        padding: 0.5rem 0.75rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.85rem;
        color: white;
    }

    .badge-success {
        background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
    }

    .badge-warning {
        background: linear-gradient(135deg, #ffc107 0%, #ff8c00 100%);
    }

    .badge-danger {
        background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
    }

    .operator-info {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        color: #2c3e50;
    }

    .operator-info i {
        color: #667eea;
    }

    .duration {
        font-weight: 600;
        color: #28a745;
        font-family: 'Courier New', monospace;
    }

    .date {
        font-family: 'Courier New', monospace;
        color: #6c757d;
        font-size: 0.9rem;
    }

    .success-rate {
        padding: 0.5rem 0.75rem;
        border-radius: 20px;
        font-weight: 700;
        color: white;
        font-size: 0.85rem;
    }

    .success-rate.high {
        background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
    }

    .success-rate.medium {
        background: linear-gradient(135deg, #ffc107 0%, #ff8c00 100%);
    }

    .success-rate.low {
        background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
    }

    .btn-detail {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        color: white;
        border: none;
        padding: 0.75rem;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
        font-size: 0.9rem;
        margin: 0 auto;
    }

    .btn-detail:hover {
        transform: scale(1.1);
        box-shadow: 0 5px 15px rgba(79, 172, 254, 0.4);
    }

    /* Detaylar sütunu için özel hizalama */
    .history-table tbody td:last-child {
        text-align: center;
    }

    .history-table thead th:last-child {
        text-align: center;
    }

    /* Mobile responsive for history table */
    @@media (max-width: 1024px) {

        .history-table thead th:nth-child(5),
        .history-table tbody td:nth-child(5) {
            display: none;
        }
    }

    @@media (max-width: 768px) {

        .history-table thead th:nth-child(3),
        .history-table tbody td:nth-child(3),
        .history-table thead th:nth-child(4),
        .history-table tbody td:nth-child(4) {
            display: none;
        }

        .section-title {
            font-size: 1.4rem;
        }

        .history-section {
            padding: 1rem;
        }
    }

    @@media (max-width: 480px) {

        .history-table thead th:nth-child(2),
        .history-table tbody td:nth-child(2) {
            display: none;
        }
    }

    /* Program Card Styles */
    .program-card {
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        border-radius: var(--border-radius);
        border: 1px solid var(--glass-border);
        box-shadow: var(--shadow-glass);
        overflow: hidden;
        transition: var(--transition);
        max-height: 600px;
        /* Sabit yükseklik */
    }

    .program-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(31, 38, 135, 0.3);
    }

    .program-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 1.5rem;
        position: relative;
        flex-shrink: 0;
        /* Header sabit kalacak */
    }

    .program-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
    }

    .program-title {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        position: relative;
        z-index: 2;
    }

    .program-info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
        position: relative;
        z-index: 2;
    }

    .info-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        background: rgba(255, 255, 255, 0.15);
        padding: 0.75rem;
        border-radius: 12px;
        backdrop-filter: blur(5px);
        transition: var(--transition);
    }

    .info-item:hover {
        background: rgba(255, 255, 255, 0.2);
        transform: scale(1.02);
    }

    .info-icon {
        width: 40px;
        height: 40px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.1rem;
        color: white;
        flex-shrink: 0;
    }

    .info-icon.success {
        background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
    }

    .info-icon.danger {
        background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
    }

    .info-icon.info {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    }

    .info-icon.warning {
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    }

    .info-icon.primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .info-content {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .info-label {
        font-size: 0.8rem;
        opacity: 0.9;
        font-weight: 500;
    }

    .info-value {
        font-size: 1rem;
        font-weight: 700;
    }

    .kaynak-list {
        padding: 1.5rem;
        flex: 1;
        overflow-y: auto;
        /* Kaydırma çubuğu */
        max-height: 350px;
        /* Maksimum yükseklik */
    }

    /* Kaynak listesi için custom scrollbar */
    .kaynak-list::-webkit-scrollbar {
        width: 8px;
    }

    .kaynak-list::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.1);
        border-radius: 4px;
    }

    .kaynak-list::-webkit-scrollbar-thumb {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 4px;
    }

    .kaynak-list::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
    }

    .kaynak-list-title {
        font-size: 1.2rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding-bottom: 0.75rem;
        border-bottom: 2px solid rgba(102, 126, 234, 0.2);
    }

    .kaynak-grid {
        display: grid;
        gap: 1rem;
    }

    .kaynak-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        background: rgba(255, 255, 255, 0.7);
        padding: 1rem;
        border-radius: 12px;
        border: 1px solid rgba(0, 0, 0, 0.1);
        transition: var(--transition);
    }

    .kaynak-item:hover {
        background: rgba(255, 255, 255, 0.9);
        transform: translateX(5px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .kaynak-icon {
        width: 50px;
        height: 50px;
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.3rem;
        color: white;
        flex-shrink: 0;
    }

    .kaynak-details {
        flex: 1;
    }

    .kaynak-details h6 {
        font-size: 1.1rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 0.5rem;
    }

    .kaynak-time {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        font-size: 0.9rem;
        color: #6c757d;
    }

    .kaynak-time span {
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .kaynak-time .duration {
        color: #28a745;
        font-weight: 600;
    }

    .kaynak-status {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        color: white;
        flex-shrink: 0;
    }

    .kaynak-status.success {
        background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        animation: pulse-success 2s infinite;
    }

    /* Başarısız kaynak durumu (kırmızı X) */
    .kaynak-status.danger {
        background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
        color: #fff;
        box-shadow: 0 8px 16px rgba(255, 75, 43, 0.35);
    }

    @@keyframes pulse-success {

        0%,
        100% {
            box-shadow: 0 0 0 0 rgba(17, 153, 142, 0.4);
        }

        50% {
            box-shadow: 0 0 0 10px rgba(17, 153, 142, 0);
        }
    }

    @@media (max-width: 768px) {
        .program-info-grid {
            grid-template-columns: repeat(2, 1fr);
        }

        .kaynak-item {
            flex-direction: column;
            text-align: center;
        }

        .kaynak-time {
            justify-content: center;
        }
    }

    @@media (max-width: 480px) {
        .program-info-grid {
            grid-template-columns: 1fr;
        }
    }
    /* === SAYFAYA ÖZEL ALTIN ARKAPLAN (login ile aynı) === */
:root{
  --gold:#face00;      /* parlak sarı */
  --amber:#f09701;     /* sıcak turuncu */
  --dark:#15120a;      /* çok koyu kahve/siyah */
}

/* Layout'taki body arkaplanını ez */
body{
  background-color:var(--dark) !important;
  background-image:
    /* merkez ışık */
    radial-gradient(1200px 800px at 38% 35%,
      rgba(250,206,0,.95) 0%,
      rgba(240,151,1,.65) 34%,
      rgba(240,151,1,.25) 50%,
      rgba(21,18,10,0) 68%),
    /* sağ üst sıcaklık */
    radial-gradient(900px 600px at 88% 8%,
      rgba(240,151,1,.35) 0%,
      rgba(21,18,10,0) 60%),
    /* sol alt karartma */
    radial-gradient(1000px 700px at 0% 100%,
      rgba(0,0,0,.55) 10%,
      rgba(0,0,0,0) 60%),
    /* zemin */
    linear-gradient(180deg,#1c150a 0%, var(--dark) 100%);
  background-attachment:fixed;
  background-size:cover;
}

/* yumuşak vignette + hafif dither (banding azaltır) */
body::after{
  content:""; position:fixed; inset:0; pointer-events:none;
  background: radial-gradient(150% 130% at 50% 50%,
    rgba(0,0,0,0) 60%, rgba(0,0,0,.45) 100%);
  mix-blend-mode:multiply;
}
body::before{
  content:""; position:fixed; inset:-2px; pointer-events:none;
  background: repeating-linear-gradient(0deg,
    rgba(255,255,255,.015) 0 2px,
    rgba(0,0,0,.02) 2px 4px);
  opacity:.25; mix-blend-mode:overlay;
}

/* Layout'taki içerik katmanının beyaz film efektini kaldır */
.content-area{ background: transparent !important; }

/* === MOR -> ALTIN OVERRIDE'LAR === */
:root{
  --gold-start:#f09701;
  --gold-end:#face00;
  --gold-grad:linear-gradient(90deg, var(--gold-start), var(--gold-end));
  /* sayfadaki tüm "primary" temayı altına çek */
  --gradient-primary: var(--gold-grad);
}
.brand-gold {
    color: #f5c518; /* altın sarısı */
}

/* RoboEye başlık kartı ve başlık yazısı */
.dashboard-header::before{ background: var(--gold-grad) !important; }
.dashboard-title{
  background: none !important;
  -webkit-text-fill-color: initial !important;
  color:#fff !important;
  text-shadow: 0 2px 8px rgba(0,0,0,.35);
}

/* "En son Program" kartının mor başlığını altın yap */
.program-header{ background: var(--gold-grad) !important; }
.program-header::before{
  background: rgba(255,255,255,.12) !important; /* cam efekti kalsın */
}

/* Geçmiş Programlar tablosu başlığı */
.history-table thead{ background: var(--gold-grad) !important; }

/* Küçük altın vurgular */
.operator-info i{ color: var(--gold-start) !important; }
.program-version{
  background: rgba(240,151,1,.12) !important;
  color:#2c3e50;
}

/* Scrollbarları da altınla uyumlu yap */
.history-table-container::-webkit-scrollbar-thumb,
.kaynak-list::-webkit-scrollbar-thumb{
  background: var(--gold-grad) !important;
}
.kaynak-list-title{ border-bottom:2px solid rgba(240,151,1,.25) !important; }
/* === Success Rate Badge (Green Pill) === */
.success-rate-badge{
    display:inline-flex; align-items:center; gap:.5rem;
    padding:.4rem .75rem; border-radius:999px;
    background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
    color:#fff; font-weight:700; font-size:.95rem;
    box-shadow: 0 6px 16px rgba(17,153,142,.35), inset 0 1px 0 rgba(255,255,255,.2);
    letter-spacing:.2px;
}
.success-rate-badge i{ font-size:1rem; filter: drop-shadow(0 1px 1px rgba(0,0,0,.2)); }
.success-rate-badge .value{ font-variant-numeric: tabular-nums; }
.success-rate-badge .label{ opacity:.95; font-weight:600; }
@@media (max-width: 480px){
    .success-rate-badge{ font-size:.9rem; padding:.35rem .65rem; }
}
</style>

<div class="dashboard-container">
    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
    </div>

    <div class="container-fluid">
        <!-- Dashboard Header -->
        <div class="dashboard-header">
            <h1 class="dashboard-title">
                 <i class="fas fa-robot brand-gold"></i> <span class="brand-gold">RoboEye</span>
            </h1>
            <p class="dashboard-subtitle">Gerçek zamanlı robot takip ve yönetim sistemi</p>
        </div>

        <!-- Stats Grid -->
        <div class="stats-grid">
            <div class="stat-card primary">
                <div class="stat-header">
                    <div>
                        <h3 class="stat-value" id="programCount">@ViewBag.ProgramCount</h3>
                        <p class="stat-label">Toplam Program</p>
                        <div class="stat-trend trend-up">
                            <i class="fas fa-arrow-up"></i>
                            <span>+12% bu hafta</span>
                        </div>
                    </div>
                    <div class="stat-icon primary">
                        <i class="fas fa-code"></i>
                    </div>
                </div>
            </div>

            <div class="stat-card success">
                <div class="stat-header">
                    <div>
                        <h3 class="stat-value" id="kaynakCount">@toplamKaynak</h3>
                        <p class="stat-label">Toplam Kaynak</p>

                         <div class="stat-trend trend-up">
                            <i class="fas fa-arrow-up"></i>
                            <span>@basariOrani% başarılı</span>
                        </div>
                    </div>
                    <div class="stat-icon success">
                        <i class="fas fa-bolt"></i>
                    </div>
                </div>
            </div>

            <div class="stat-card danger">
                <div class="stat-header">
                    <div>
                        <h3 class="stat-value" id="hataCount">@ViewBag.HataToplam</h3>
                        <p class="stat-label">Toplam Hata</p>
                        <div class="stat-trend trend-down">
                            <i class="fas fa-arrow-down"></i>
                            <span>-5% bu hafta</span>
                        </div>
                    </div>
                    <div class="stat-icon danger">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                </div>
            </div>

            <div class="stat-card info">
                <div class="stat-header">
                    <div>
                        <h3 class="stat-value" id="totalTime">@ViewBag.AktifSureStr</h3>
                        <p class="stat-label">Bugün Toplam Kaynak Süresi</p>
                        <div class="stat-trend trend-up">
                            <i class="fas fa-arrow-up"></i>
                            <span>+15% bugün</span>
                        </div>
                    </div>
                    <div class="stat-icon info">
                        <i class="fas fa-clock"></i>
                    </div>
                </div>
            </div>

            <div class="stat-card warning">
                <div class="stat-header">
                    <div>
                        <h3 class="stat-value" id="trafoCount">5</h3>
                        <p class="stat-label">Aktif Trafo</p>
                        <div class="stat-trend trend-up">
                            <i class="fas fa-arrow-up"></i>
                            <span>Tümü çalışıyor</span>
                        </div>
                    </div>
                    <div class="stat-icon warning">
                        <i class="fas fa-plug"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Robot Status -->
        <div class="robot-status stopped" id="robotStatusCard">
            <div class="robot-info">
                <div class="robot-avatar" id="robotAvatar">
                    <i class="fas fa-robot"></i>
                </div>
                <div class="robot-details">
                    <h3>
                        <span class="status-indicator" id="robotStatusIndicator"></span>
                        <span id="robotStatusText">Robot Durdu</span>
                    </h3>
                    <p class="robot-program">
                        <i class="fas fa-stop-circle" id="robotStatusIcon"></i>
                        Aktif Program: <strong id="activeProgramText">Bekleniyor...</strong>
                    </p>
                    <div class="robot-actions">
                        <a href="#" class="btn-modern success">
                            <i class="fas fa-eye"></i>
                            Canlı İzle
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Son Çalıştırılan Program Kartı (Dinamik) -->
        <div class="program-card" style="margin-bottom:2rem;">
            @{
                // Kaynakları bir kez sırala ve baş/bitiş için fallback hazırla
                var kaynaklar = program?.Kaynaklar?.OrderBy(k => k.BaslangicSaati).ToList()
                               ?? new List<FanucRelease.Models.Kaynak>();
                DateTime? headerBas = (program != null && program.BaslangicZamani > DateTime.MinValue)
                                        ? program.BaslangicZamani
                                        : (kaynaklar.Count > 0 ? kaynaklar.First().BaslangicSaati : (DateTime?)null);
                DateTime? headerBit = (program != null && program.BitisZamani > DateTime.MinValue)
                                        ? program.BitisZamani
                                        : (kaynaklar.Count > 0 ? kaynaklar.Max(x => x.BitisSaati) : (DateTime?)null);
                string basText = headerBas.HasValue ? headerBas.Value.ToString( "yyyy-MM-dd HH:mm:ss") : "—";
                string bitText = headerBit.HasValue ? headerBit.Value.ToString("yyyy-MM-dd HH:mm:ss") : "—";
            }
            <div class="program-header">
                <h4 class="program-title">
                    <i class="fa-solid fa-file"></i>
                    En son Program: @(program?.ProgramAdi ?? "—")
                </h4>
                <div class="program-info-grid">
                    <div class="info-item">
                        <div class="info-icon success">
                            <i class="fas fa-play"></i>
                        </div>
                        <div class="info-content">
                            <span class="info-label">Başlangıç</span>
                            <span class="info-value">@basText</span>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon danger">
                            <i class="fas fa-stop"></i>
                        </div>
                        <div class="info-content">
                            <span class="info-label">Bitiş</span>
                            <span class="info-value">@bitText</span>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon info">
                            <i class="fas fa-user"></i>
                        </div>
                        <div class="info-content">
                            <span class="info-label">Operatör</span>
                            <span class="info-value">@(program?.Operator is null ? "—" : ($"{program.Operator.Ad} {program.Operator.Soyad}"))</span>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon warning">
                            <i class="fas fa-bolt"></i>
                        </div>
                        <div class="info-content">
                            <span class="info-label">Başarılı Kaynak</span>
                            <span class="info-value">@programBasarili</span>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon primary">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                        <div class="info-content">
                            <span class="info-label">Başarısız Kaynak</span>
                            <span class="info-value">@programBasarisiz</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="kaynak-list">
                <h5 class="kaynak-list-title">
                    <i class="fas fa-list"></i>
                    Kaynak Detayları
                </h5>
                <div class="kaynak-grid">
                    @for (int i = 0; i < kaynaklar.Count; i++)
                    {
                        var k = kaynaklar[i];
                        var ad = $"Kaynak-{(i+1).ToString("D2")}";
                        var bas = k.BaslangicSaati == default ? "—" : k.BaslangicSaati.ToString("HH:mm");
                        var bit = k.BitisSaati == default ? "—" : k.BitisSaati.ToString("HH:mm");
                        var ts = k.ToplamSure != default ? k.ToplamSure.ToTimeSpan() : (k.BitisSaati - k.BaslangicSaati);
                        if (ts < TimeSpan.Zero) { ts = TimeSpan.Zero; }
                        var totalMinutes = (int)Math.Round(ts.TotalMinutes);
                        var sureText = ts.TotalHours >= 1 ? $"{(int)ts.TotalHours} sa {ts.Minutes} dk" : $"{totalMinutes} dk";
                        var statusClass = k.basarili_mi ? "success" : "danger";
                        // 'fa-times' geniş destekli (FA5/FA6 alias), görünmemeyi önler
                        var statusIcon = k.basarili_mi ? "fas fa-check" : "fas fa-times";
                    <div class="kaynak-item">
                        <div class="kaynak-icon">
                            <i class="fas fa-bolt"></i>
                        </div>
                        <div class="kaynak-details">
                            <h6>@ad</h6>
                            <div class="kaynak-time">
                                <span><i class="fas fa-play-circle"></i> @bas</span>
                                <span><i class="fas fa-stop-circle"></i> @bit</span>
                                <span class="duration"><i class="fas fa-clock"></i> @sureText</span>
                            </div>
                        </div>
                        <div class="kaynak-status @statusClass">
                            <i class="@statusIcon"></i>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>

        <!-- Charts Section -->
        <div class="charts-grid">
            <div class="chart-card success-rate-card">
                <div class="chart-header">
                    <h5 class="chart-title">
                        <i class="fas fa-chart-pie"></i> Son Program Başarı Oranı
                    </h5>
                </div>
                <div class="success-rate-display">
                    <div class="success-circle">
                        <div class="success-percentage">@programBasariYuzde%</div>
                        <div class="program-name">@(string.IsNullOrWhiteSpace(program?.ProgramAdi) ? "—" : program!.ProgramAdi)</div>
                    </div>
                    <div class="success-stats">
                        <div class="stat-item success-stat">
                            <i class="fas fa-check-circle"></i>
                            <div>
                                <span class="stat-number">@programBasarili</span>
                                <span class="stat-text">Başarılı</span>
                            </div>
                        </div>
                        <div class="stat-item error-stat">
                            <i class="fas fa-times-circle"></i>
                            <div>
                                <span class="stat-number">@programBasarisiz</span>
                                <span class="stat-text">Hatalı</span>
                            </div>
                        </div>
                        <div class="stat-item total-stat">
                            <i class="fas fa-bolt"></i>
                            <div>
                                <span class="stat-number">@programToplam</span>
                                <span class="stat-text">Toplam</span>
                            </div>
                        </div>
                    </div>
                    <!-- todayPie canvas eklendi: Chart.js context hatasını önlemek için varlık kontrolü yapılacak -->
                    <div style="width:120px; height:120px; display:flex; align-items:center; justify-content:center;">
                        <canvas id="todayPie" width="100" height="100" aria-label="Başarı Oranı Grafiği"></canvas>
                    </div>
                </div>
            </div>

            <div class="chart-card">
                <div class="chart-header">
                    <h5 class="chart-title">
                        <i class="fas fa-chart-bar"></i> Son Program Parametreleri
                    </h5>
                </div>
                <div class="chart-container">
                    <canvas id="parametersBar"></canvas>
                </div>
            </div>

            <div class="chart-card alarm-card">
                <div class="chart-header">
                    <h5 class="chart-title">
                        <i class="fas fa-exclamation-triangle"></i> Program Alarm Kayıtları
                    </h5>

                </div>
                <div class="alarm-container">
                    <div class="alarm-list">
                        <div class="alarm-item high">
                            <div class="alarm-icon">
                                <i class="fas fa-exclamation-triangle"></i>
                            </div>
                            <div class="alarm-details">
                                <div class="alarm-code">ALM-001</div>
                                <div class="alarm-desc">Yüksek Akım Değeri Tespit Edildi</div>
                                <div class="alarm-time">14:32:15</div>
                            </div>
                            <div class="alarm-status resolved">
                                <i class="fas fa-check"></i>
                            </div>
                        </div>

                        <div class="alarm-item medium">
                            <div class="alarm-icon">
                                <i class="fas fa-exclamation-circle"></i>
                            </div>
                            <div class="alarm-details">
                                <div class="alarm-code">ALM-015</div>
                                <div class="alarm-desc">Tel Hızı Normal Değerlerin Altında</div>
                                <div class="alarm-time">14:45:22</div>
                            </div>
                            <div class="alarm-status resolved">
                                <i class="fas fa-check"></i>
                            </div>
                        </div>

                        <div class="alarm-item low">
                            <div class="alarm-icon">
                                <i class="fas fa-info-circle"></i>
                            </div>
                            <div class="alarm-details">
                                <div class="alarm-code">ALM-032</div>
                                <div class="alarm-desc">Kaynak Pozisyonu Uyarısı</div>
                                <div class="alarm-time">15:10:08</div>
                            </div>
                            <div class="alarm-status resolved">
                                <i class="fas fa-check"></i>
                            </div>
                        </div>

                        <div class="alarm-item high">
                            <div class="alarm-icon">
                                <i class="fas fa-exclamation-triangle"></i>
                            </div>
                            <div class="alarm-details">
                                <div class="alarm-code">ALM-008</div>
                                <div class="alarm-desc">Voltaj Dalgalanması</div>
                                <div class="alarm-time">15:18:45</div>
                            </div>
                            <div class="alarm-status active">
                                <i class="fas fa-times"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

       <!-- Geçmiş Programlar Tablosu -->
<div class="history-section">
    <div class="section-header">
        <h4 class="section-title">
            <i class="fas fa-history"></i>
            Geçmiş Programlar
        </h4>
        <p class="section-subtitle">Son çalıştırılan programların geçmiş kayıtları</p>
    </div>

    <div class="history-table-container">
        <div class="table-responsive">
            <table class="table history-table">
                <thead>
                    <tr>
                        <th><i class="fas fa-code"></i> Program Adı</th>
                        <th><i class="fas fa-bolt"></i> Kaynak Sayısı</th>
                        <th><i class="fas fa-user"></i> Operatör</th>
                        <th><i class="fas fa-clock"></i> Toplam Süre</th>
                        <th><i class="fas fa-calendar"></i> Tarih</th>
                        <th><i class="fas fa-chart-line"></i> Başarı</th>
                        <th><i class="fas fa-eye"></i> Detaylar</th>
                    </tr>
                </thead>
                <tbody>
                @if (!items.Any())
                {
                    <tr>
                        <td colspan="7" class="text-muted">Kayıt bulunamadı.</td>
                    </tr>
                }
                else
                {
                    foreach (var item in items)
                    {
                        <tr>
                            <td>
                                <div class="program-name">
                                    <span class="program-code">@item.ProgramAdi</span>
                                    <small class="program-version">#@item.Id</small>
                                </div>
                            </td>

                            <td>
                                <span class="@item.BadgeClass">@item.KaynakSayisi</span>
                            </td>

                            <td>
                                <div class="operator-info">
                                    <i class="fas fa-user-circle"></i>
                                    <span>@item.OperatorAdSoyad</span>
                                </div>
                            </td>

                            <td><span class="duration">@item.ToplamSureText</span></td>
                            <td><span class="date">@item.TarihText</span></td>

                            <!-- Başarı: şimdilik sabit 100% -->
                            <td><span class="success-rate high">@item.BasariYuzde%</span></td>

                            <td>
                                <a class="btn-detail"
                                   asp-controller="ProgramDetay"
                                   asp-action="Index"
                                   asp-route-id="@item.Id"
                                   title="Detayları Gör">
                                    <i class="fas fa-eye"></i>
                                </a>
                            </td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
    </div>
</div>

<script>
    // Chart.js configurations with modern styling
    const chartDefaults = {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                labels: {
                    font: { family: 'Poppins', size: 12, weight: '500' },
                    color: '#2c3e50'
                }
            }
        },
        scales: {
            x: {
                grid: { color: 'rgba(0,0,0,0.05)' },
                ticks: { font: { family: 'Poppins', size: 11 }, color: '#6c757d' }
            },
            y: {
                grid: { color: 'rgba(0,0,0,0.05)' },
                ticks: { font: { family: 'Poppins', size: 11 }, color: '#6c757d' }
            }
        }
    };

    // Chart initialization will run after DOM is ready to ensure canvases exist
    document.addEventListener('DOMContentLoaded', function () {
        // Today Success Rate Pie Chart
        const todayPieCanvas = document.getElementById('todayPie');
        if (todayPieCanvas) {
            new Chart(todayPieCanvas, {
                type: 'doughnut',
                data: {
                    labels: ['Başarılı', 'Hatalı'],
                    datasets: [{
                        data: [@programBasarili, @programBasarisiz],
                        backgroundColor: ['#11998e', '#ff416c'],
                        borderWidth: 0,
                        cutout: '70%'
                    }]
                },
                options: {
                    ...chartDefaults,
                    plugins: {
                        ...chartDefaults.plugins,
                        legend: { position: 'bottom' }
                    }
                }
            });
        }

        // Parameters Bar Chart
        const parametersBarCanvas = document.getElementById('parametersBar');
        if (parametersBarCanvas) {
            new Chart(parametersBarCanvas, {
                type: 'bar',
                data: {
                    labels: ['Akım (A)', 'Voltaj (V)', 'Tel Hızı (m/dk)', 'Robot Hızı (%)'],
                    datasets: [{
                        label: 'Ortalama Değer',
                        data: [185, 24.5, 8.2, 75],
                        backgroundColor: [
                            '#ff416c',
                            '#4facfe',
                            '#f093fb',
                            '#11998e'
                        ],
                        borderRadius: 8,
                        borderWidth: 0
                    }]
                },
                options: {
                    ...chartDefaults,
                    plugins: {
                        ...chartDefaults.plugins,
                        legend: { display: false },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    const labels = ['185 A', '24.5 V', '8.2 m/dk', '75%'];
                                    return labels[context.dataIndex];
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            grid: { display: false },
                            ticks: {
                                font: { family: 'Poppins', size: 10, weight: '600' },
                                color: '#2c3e50',
                                maxRotation: 0
                            }
                        },
                        y: {
                            grid: { color: 'rgba(0,0,0,0.05)' },
                            ticks: {
                                font: { family: 'Poppins', size: 11 },
                                color: '#6c757d'
                            }
                        }
                    }
                }
            });
        }
    });

    // Page loading animation
    document.addEventListener('DOMContentLoaded', function () {
        const loadingOverlay = document.getElementById('loadingOverlay');

        // Show loading
        loadingOverlay.classList.add('show');

        // Hide loading after 1.5 seconds
        setTimeout(() => {
            loadingOverlay.classList.remove('show');

            // Add entrance animations
            const cards = document.querySelectorAll('.stat-card, .chart-card, .robot-status, .quick-actions');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)';
                setTimeout(() => {
                    card.style.transition = 'all 0.6s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
        }, 1500);

        // Otomatik artış kapatıldı: gerçek zamanlı güncelleme istenirse SignalR/gerçek veri ile bağlanılacak
    });

    // Add click effects to cards
    document.querySelectorAll('.stat-card, .action-btn').forEach(card => {
        card.addEventListener('click', function (e) {
            // Create ripple effect
            const ripple = document.createElement('span');
            const rect = this.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;

            ripple.style.cssText = `
            position: absolute;
            width: ${size}px;
            height: ${size}px;
            left: ${x}px;
            top: ${y}px;
            background: rgba(255,255,255,0.5);
            border-radius: 50%;
            pointer-events: none;
            transform: scale(0);
            animation: ripple 0.6s ease-out;
        `;

            this.style.position = 'relative';
            this.style.overflow = 'hidden';
            this.appendChild(ripple);

            setTimeout(() => ripple.remove(), 600);
        });
    });

    // Add CSS for ripple animation
    const style = document.createElement('style');
    style.textContent = `
    @@keyframes ripple {
        to {
            transform: scale(2);
            opacity: 0;
        }
    }
`;
    document.head.appendChild(style);

  

    // Program Details Function
    function viewProgramDetails(programId) {
        // Program detay sayfasına yönlendirme
        window.location.href = `/Home/ProgramDetails?id=${programId}`;
    }

    // Make function globally available
    window.viewProgramDetails = viewProgramDetails;
</script>

<!-- SignalR JavaScript Library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>

<script>
    // Update robot status UI
    function updateRobotStatus(status, activeProgram) {
        const robotStatusCard = document.getElementById('robotStatusCard');
        const robotStatusText = document.getElementById('robotStatusText');
        const activeProgramText = document.getElementById('activeProgramText');
        const robotStatusIcon = document.getElementById('robotStatusIcon');
        if (status === "Calisiyor") {
            robotStatusCard.classList.remove('stopped');
            robotStatusText.textContent = 'Robot Çalışıyor';
            robotStatusIcon.className = 'fas fa-play-circle';
        } else {
            robotStatusCard.classList.add('stopped');
            robotStatusText.textContent = 'Robot Durdu';
            robotStatusIcon.className = 'fas fa-stop-circle';
        }
        if (activeProgram) {
            activeProgramText.textContent = activeProgram;
        }
        console.log(`Robot Status Updated: ${status}, Program: ${activeProgram}`);
    }

    // SignalR Connection for Real-time Robot Status
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/robotStatusHub")
        .build();

    // Robot status update handler
    connection.on("ReceiveRobotStatus", function (status, activeProgram) {
        updateRobotStatus(status, activeProgram);
    });

    // Start SignalR connection
    connection.start().then(function () {
        console.log("SignalR connected - Robot status updates enabled");
    }).catch(function (err) {
        console.error("SignalR connection error:", err.toString());
    });
</script>