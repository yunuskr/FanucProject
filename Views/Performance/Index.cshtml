@model FanucRelease.ViewModels.OperatorPerformanceIndexVM
@{
    ViewData["Title"] = "Operatör Performansı";
}
<div class="container-fluid py-4">
    <div class="d-flex align-items-center mb-3">
        <h2 class="me-auto" style="font-weight:600;">Operatör Performansı</h2>
        <form method="get" class="row row-cols-lg-auto g-2 align-items-center">
            <div class="col">
                <label class="form-label m-0 small">Min Program</label>
                <input type="number" name="minProgram" value="@Model.MinProgram" class="form-control form-control-sm" style="width:100px" />
            </div>
            <div class="col">
                <label class="form-label m-0 small">Son (gün)</label>
                <input type="number" name="days" value="@Model.Days" class="form-control form-control-sm" style="width:100px" />
            </div>
            <div class="col">
                <label class="form-label m-0 small">Max Süre (saat)</label>
                <input type="number" step="0.1" name="maxProgramHours" value="@(Model.MaxProgramHours?.ToString("0.0"))" class="form-control form-control-sm" style="width:120px" />
            </div>
            <div class="col d-flex gap-2 pt-3">
                <button class="btn btn-sm btn-primary">Filtrele</button>
                <a class="btn btn-sm btn-outline-secondary" href="@Url.Action("ExportCsv", new { minProgram = Model.MinProgram, days = Model.Days, maxProgramHours = Model.MaxProgramHours })">CSV</a>
            </div>
        </form>
    </div>
    <div class="mb-2 text-muted small">Oluşturma Zamanı: @Model.OlusturmaZamani.ToString("yyyy-MM-dd HH:mm:ss")</div>

        <div class="row g-3 mb-4">
            <div class="col-6 col-md-3">
                <div class="p-3 rounded shadow-sm" style="background:linear-gradient(135deg,#f8d778,#f1c232);">
                    <div class="small text-muted">Toplam Program</div>
                    <div class="fs-5 fw-semibold">@Model.ToplamProgram</div>
                </div>
            </div>
            <div class="col-6 col-md-3">
                <div class="p-3 rounded shadow-sm" style="background:linear-gradient(135deg,#d6e4ff,#91b4f8);">
                    <div class="small text-muted">Toplam Kaynak</div>
                    <div class="fs-5 fw-semibold">@Model.ToplamKaynak</div>
                </div>
            </div>
            <div class="col-6 col-md-3">
                <div class="p-3 rounded shadow-sm" style="background:linear-gradient(135deg,#c9f7d5,#6ecf85);">
                    <div class="small text-muted">Başarılı Kaynak</div>
                    <div class="fs-5 fw-semibold text-success">@Model.ToplamBasariliKaynak</div>
                </div>
            </div>
            <div class="col-6 col-md-3">
                <div class="p-3 rounded shadow-sm" style="background:linear-gradient(135deg,#ffd4d4,#f88989);">
                    <div class="small text-muted">Hata</div>
                    <div class="fs-5 fw-semibold text-danger">@Model.ToplamHata</div>
                </div>
            </div>
            <div class="col-6 col-md-3">
                <div class="p-3 rounded shadow-sm" style="background:linear-gradient(135deg,#e0d4ff,#b292ff);">
                    <div class="small text-muted">Genel Başarı %</div>
                    <div class="fs-5 fw-semibold">@Model.GenelBasariYuzdesi%</div>
                </div>
            </div>
        </div>

    <div class="table-responsive shadow rounded" style="background:rgba(255,255,255,0.85);backdrop-filter:blur(4px);">
        <table class="table table-sm align-middle mb-0" id="tbl-operator">
            <thead class="table-light" style="position:sticky;top:0;z-index:10;">
                <tr>
                    <th>Operatör</th>
                    <th>Kullanıcı</th>
                    <th class="text-end">Program</th>
                    <th class="text-end">Kaynak</th>
                    <th class="text-end text-success">Başarılı</th>
                    <th class="text-end text-danger">Başarısız</th>
                    <th class="text-end">Başarı %</th>
                    <th class="text-end">Hata</th>
                    <th class="text-end">Ort. Süre</th>
                    <th class="text-end">Son Program</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @foreach (var op in Model.Operatorlar)
            {
                var badgeClass = op.BasariYuzdesi >= 90 ? "bg-success" : op.BasariYuzdesi >= 70 ? "bg-warning" : "bg-danger";
                <tr>
                    <td>@op.AdSoyad</td>
                    <td class="text-muted">@op.KullaniciAdi</td>
                    <td class="text-end fw-semibold">@op.ProgramSayisi</td>
                    <td class="text-end">@op.ToplamKaynak</td>
                    <td class="text-end text-success">@op.BasariliKaynak</td>
                    <td class="text-end text-danger">@op.BasarisizKaynak</td>
                    <td class="text-end">
                        <div class="progress" style="height:14px; background:rgba(0,0,0,0.08);">
                            <div class="progress-bar @badgeClass" role="progressbar" style="width:@op.BasariYuzdesi%; font-size:0.65rem;">@op.BasariYuzdesi%</div>
                        </div>
                    </td>
                    <td class="text-end">@op.HataSayisi</td>
                    <td class="text-end">@op.OrtalamaProgramSureText</td>
                    <td class="text-end">@op.SonProgramZamanText</td>
                    <td class="text-end"><a class="btn btn-xs btn-outline-primary btn-sm" href="@Url.Action("Operator", new { id = op.OperatorId, days = Model.Days, maxProgramHours = Model.MaxProgramHours })">Detay</a></td>
                </tr>
            }
            @if (!Model.Operatorlar.Any())
            {
                <tr><td colspan="11" class="text-center text-muted py-4">Kayıt bulunamadı.</td></tr>
            }
            </tbody>
        </table>
    </div>
</div>
<script>
    (function(){
        const tbl = document.getElementById('tbl-operator');
        if(!tbl) return;
        const thead = tbl.querySelector('thead');
        if(!thead) return;
        let sortState = {};
        function getCellValue(tr, idx){
            const td = tr.children[idx];
            if(!td) return '';
            const text = td.innerText.trim();
            const num = text.replace(/[%]/g,'').replace(',', '.');
            return isNaN(num) || num === '' ? text : parseFloat(num);
        }
        function comparer(idx){
            return function(a,b){
                const v1 = getCellValue(a, idx);
                const v2 = getCellValue(b, idx);
                if(typeof v1 === 'number' && typeof v2 === 'number') return v1 - v2;
                return v1.toString().localeCompare(v2.toString(),'tr');
            }
        }
        thead.addEventListener('click', e => {
            const th = e.target.closest('th');
            if(!th) return;
            const ths = Array.from(thead.querySelectorAll('th'));
            const idx = ths.indexOf(th);
            if(idx < 0) return;
            const tbody = tbl.querySelector('tbody');
            const rows = Array.from(tbody.querySelectorAll('tr')).filter(r=>r.children.length>1);
            const asc = !(sortState[idx] === true);
            rows.sort(comparer(idx));
            if(!asc) rows.reverse();
            rows.forEach(r=>tbody.appendChild(r));
            sortState = {[idx]: asc};
            ths.forEach(h=>h.classList.remove('sorted-asc','sorted-desc'));
            th.classList.add(asc? 'sorted-asc':'sorted-desc');
        });
    })();
</script>
<style>
    #tbl-operator th { cursor:pointer; user-select:none; }
    #tbl-operator th.sorted-asc::after { content:' \25B2'; font-size:0.65rem; }
    #tbl-operator th.sorted-desc::after { content:' \25BC'; font-size:0.65rem; }
</style>
