@model FanucRelease.ViewModels.OperatorDetailVM
@{
    ViewData["Title"] = "Operatör Detayı";
}
<div class="container-fluid py-4">
    <div class="d-flex align-items-center mb-3">
        <div>
            <h2 class="mb-0" style="font-weight:600;">@Model.AdSoyad <small class="text-muted" style="font-size:0.65em;">@Model.KullaniciAdi</small></h2>
            <div class="small text-muted">Oluşturma: @Model.OlusturmaZamani.ToString("yyyy-MM-dd HH:mm:ss")</div>
        </div>
        <div class="ms-auto d-flex gap-2">
            <a class="btn btn-sm btn-secondary" href="@Url.Action("Index", new { days = Model.Days, maxProgramHours = Model.MaxProgramHours })">&larr; Geri</a>
            <a class="btn btn-sm btn-outline-primary" href="@Url.Action("OperatorCsv", new { id = Model.OperatorId, days = Model.Days, maxProgramHours = Model.MaxProgramHours })">CSV</a>
        </div>
    </div>
    <form method="get" class="row row-cols-lg-auto g-2 align-items-end mb-3">
        <input type="hidden" name="id" value="@Model.OperatorId" />
        <div class="col">
            <label class="form-label m-0 small">Son (gün)</label>
            <input type="number" name="days" value="@Model.Days" class="form-control form-control-sm" style="width:100px" />
        </div>
        <div class="col">
            <label class="form-label m-0 small">Max Süre (saat)</label>
            <input type="number" step="0.1" name="maxProgramHours" value="@(Model.MaxProgramHours?.ToString("0.0"))" class="form-control form-control-sm" style="width:120px" />
        </div>
        <div class="col">
            <button class="btn btn-sm btn-primary">Filtrele</button>
        </div>
    </form>

    <div class="row g-3 mb-4">
        <div class="col-6 col-md-3">
            <div class="p-3 rounded shadow-sm" style="background:linear-gradient(135deg,#f8d778,#f1c232);">
                <div class="small text-muted">Program</div>
                <div class="fs-5 fw-semibold">@Model.ToplamProgram</div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="p-3 rounded shadow-sm" style="background:linear-gradient(135deg,#d6e4ff,#91b4f8);">
                <div class="small text-muted">Kaynak</div>
                <div class="fs-5 fw-semibold">@Model.ToplamKaynak</div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="p-3 rounded shadow-sm" style="background:linear-gradient(135deg,#c9f7d5,#6ecf85);">
                <div class="small text-muted">Başarılı</div>
                <div class="fs-5 fw-semibold text-success">@Model.ToplamBasarili</div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="p-3 rounded shadow-sm" style="background:linear-gradient(135deg,#ffd4d4,#f88989);">
                <div class="small text-muted">Hata</div>
                <div class="fs-5 fw-semibold text-danger">@Model.ToplamHata</div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="p-3 rounded shadow-sm" style="background:linear-gradient(135deg,#e0d4ff,#b292ff);">
                <div class="small text-muted">Başarı %</div>
                <div class="fs-5 fw-semibold">@Model.GenelBasariYuzdesi%</div>
            </div>
        </div>
    </div>

    <div class="table-responsive shadow rounded" style="background:rgba(255,255,255,0.85);backdrop-filter:blur(4px);">
        <table class="table table-sm align-middle mb-0" id="tbl-program">
            <thead class="table-light" style="position:sticky;top:0;z-index:10;">
                <tr>
                    <th>Program</th>
                    <th class="text-end">Kaynak</th>
                    <th class="text-end text-success">Başarılı</th>
                    <th class="text-end text-danger">Başarısız</th>
                    <th class="text-end">Başarı %</th>
                    <th class="text-end">Hata</th>
                    <th class="text-end">Süre</th>
                    <th class="text-end">Bitiş</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var pr in Model.Programlar)
            {
                var badgeClass = pr.BasariYuzdesi >= 90 ? "bg-success" : pr.BasariYuzdesi >= 70 ? "bg-warning" : "bg-danger";
                <tr>
                    <td>@pr.ProgramAdi</td>
                    <td class="text-end fw-semibold">@pr.KaynakToplam</td>
                    <td class="text-end text-success">@pr.BasariliKaynak</td>
                    <td class="text-end text-danger">@pr.BasarisizKaynak</td>
                    <td class="text-end">
                        <div class="progress" style="height:14px; background:rgba(0,0,0,0.08);">
                            <div class="progress-bar @badgeClass" role="progressbar" style="width:@pr.BasariYuzdesi%; font-size:0.65rem;">@pr.BasariYuzdesi%</div>
                        </div>
                    </td>
                    <td class="text-end">@pr.HataSayisi</td>
                    <td class="text-end">@pr.ProgramSureText</td>
                    <td class="text-end">@pr.BitisZamani.ToString("yyyy-MM-dd HH:mm")</td>
                </tr>
            }
            @if (!Model.Programlar.Any())
            {
                <tr><td colspan="8" class="text-center text-muted py-4">Kayıt bulunamadı.</td></tr>
            }
            </tbody>
        </table>
    </div>
</div>
<script>
    (function(){
        const tbl = document.getElementById('tbl-program');
        if(!tbl) return;
        const thead = tbl.querySelector('thead');
        if(!thead) return;
        let sortState = {};
        function getCellValue(tr, idx){
            const td = tr.children[idx];
            if(!td) return '';
            const text = td.innerText.trim();
            const num = text.replace(/[%]/g,'').replace(',', '.');
            return isNaN(num) || num === '' ? text : parseFloat(num);
        }
        function comparer(idx){
            return function(a,b){
                const v1 = getCellValue(a, idx);
                const v2 = getCellValue(b, idx);
                if(typeof v1 === 'number' && typeof v2 === 'number') return v1 - v2;
                return v1.toString().localeCompare(v2.toString(),'tr');
            }
        }
        thead.addEventListener('click', e => {
            const th = e.target.closest('th');
            if(!th) return;
            const ths = Array.from(thead.querySelectorAll('th'));
            const idx = ths.indexOf(th);
            if(idx < 0) return;
            const tbody = tbl.querySelector('tbody');
            const rows = Array.from(tbody.querySelectorAll('tr')).filter(r=>r.children.length>1);
            const asc = !(sortState[idx] === true);
            rows.sort(comparer(idx));
            if(!asc) rows.reverse();
            rows.forEach(r=>tbody.appendChild(r));
            sortState = {[idx]: asc};
            ths.forEach(h=>h.classList.remove('sorted-asc','sorted-desc'));
            th.classList.add(asc? 'sorted-asc':'sorted-desc');
        });
    })();
</script>
<style>
    #tbl-program th { cursor:pointer; user-select:none; }
    #tbl-program th.sorted-asc::after { content:' \25B2'; font-size:0.65rem; }
    #tbl-program th.sorted-desc::after { content:' \25BC'; font-size:0.65rem; }
</style>