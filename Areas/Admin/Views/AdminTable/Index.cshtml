@model List<FanucRelease.Models.Admin>
@{
    ViewData["Title"] = "Admin Kullanıcıları";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<partial name="_DeleteConfirmModal" />

<div class="d-flex justify-content-between align-items-center mb-3">
    <h4 class="mb-0">Admin Kullanıcıları</h4>
    <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addAdminModal">
        <i class="uil uil-plus me-1"></i> Yeni Admin Ekle
    </button>
</div>

<!-- Admin Ekle / Güncelle Modal -->
<div class="modal fade" id="addAdminModal" tabindex="-1" aria-labelledby="addAdminModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="addAdminForm">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="addAdminModalLabel">Yeni Admin Ekle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="adminId" name="Id" />
                    <div class="mb-3">
                        <label for="adminKullaniciAdi" class="form-label">Kullanıcı Adı</label>
                        <input type="text" class="form-control" id="adminKullaniciAdi" name="KullaniciAdi" required>
                    </div>
                    <div class="mb-3">
                        <label for="adminSifre" class="form-label">Şifre</label>
                        <input type="text" class="form-control" id="adminSifre" name="Sifre" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Kaydet</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                </div>
            </form>
        </div>
    </div>
</div>

<table class="table table-centered datatable dt-responsive nowrap table-card-list"
       style="border-collapse: collapse; border-spacing: 0 12px; width: 100%;">
    <thead>
        <tr class="bg-transparent">
            <th style="width: 24px;">
                
            </th>
            <th>#ID</th>
            <th>Kullanıcı Adı</th>
            <th>Şifre</th>
            <th style="width: 120px;">İşlem</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var admin in Model)
        {
            <tr>
                <td>
                    
                </td>
                <td>@admin.Id</td>
                <td>@admin.KullaniciAdi</td>
                <td>@admin.Sifre</td>
                <td>
                    <a href="javascript:void(0);" class="px-3 text-primary edit-admin"
                       data-id="@admin.Id"
                       data-kullaniciadi="@admin.KullaniciAdi"
                       data-sifre="@admin.Sifre">
                        <i class="uil uil-pen font-size-18"></i>
                    </a>
                    <a href="javascript:void(0);" class="px-3 text-danger btn-delete"
                       data-id="@admin.Id"
                       data-url="@Url.Action("Delete", "AdminTable", new { area = "Admin" })">
                        <i class="uil uil-trash-alt font-size-18"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
<script>
$(document).ready(function () {
    let isAdminEditMode = false;

    $("#addAdminForm").on("submit", function (e) {
        e.preventDefault();

        const token = $('input[name="__RequestVerificationToken"]').val();

        const url = isAdminEditMode
            ? '@Url.Action("UpdateAdmin", "AdminTable", new { area = "Admin" })'
            : '@Url.Action("AddAdmin", "AdminTable", new { area = "Admin" })';

        const data = {
            Id: $("#adminId").val(),
            KullaniciAdi: $("#adminKullaniciAdi").val(),
            Sifre: $("#adminSifre").val()
        };

        if (!isAdminEditMode) {
            delete data.Id;         // veya: data.Id = 0;
        }

        $.ajax({
            type: "POST",
            url: url,
            data: data,
            headers: { 'RequestVerificationToken': token },
            success: function () { location.reload(); },
            error: function (xhr) {
                console.error(xhr.responseText);
                alert("İşlem başarısız oldu.");
            }
        });
    });

    // Düzenle
    $(".edit-admin").on("click", function () {
        isAdminEditMode = true;
        $("#adminId").val($(this).data("id"));
        $("#adminKullaniciAdi").val($(this).data("kullaniciadi"));
        $("#adminSifre").val($(this).data("sifre"));
        $("#addAdminModalLabel").text("Admin Düzenle");
        $("#addAdminModal").modal("show");
    });

    // Modal reset
    $('#addAdminModal').on('hidden.bs.modal', function () {
        isAdminEditMode = false;
        $('#addAdminForm')[0].reset();
        $('#adminId').val(''); // Add modunda göndermeyeceğiz zaten
        $("#addAdminModalLabel").text("Yeni Admin Ekle");
    });

    // Silme – token ekle
    $(document).on("click", ".btn-delete", function () {
        $("#deleteId").val($(this).data("id"));
        $("#deleteUrl").val($(this).data("url"));
        $("#deleteConfirmModal").modal("show");
    });

    $("#confirmDeleteBtn").on("click", function () {
        const id = $("#deleteId").val();
        const url = $("#deleteUrl").val();
        const token = $('input[name="__RequestVerificationToken"]').val();

        $.ajax({
            type: "POST",
            url: url,
            data: { id: id },
            headers: { 'RequestVerificationToken': token },
            success: function () {
                $("#deleteConfirmModal").modal("hide");
                location.reload();
            },
            error: function (xhr) {
                console.error(xhr.responseText);
                alert("Silme başarısız oldu.");
            }
        });
    });
});
</script>
}
